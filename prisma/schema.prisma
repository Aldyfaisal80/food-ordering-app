generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    // directUrl = env("DIRECT_URL")
}

enum UserRole {
    USER
    ADMIN
    SELLER
}

model User {
    id       String    @id @default(cuid())
    username String    @unique @db.VarChar(100)
    name     String    @db.VarChar(100)
    email    String    @unique
    role     UserRole  @default(USER)
    provider String?   @db.VarChar(100)
    token    String?
    password String?   @db.VarChar(100)
    address  Address[]
    store_id String?   @unique
    store    Store?    @relation(fields: [store_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@map("users")
}

model Address {
    id          String  @id @default(cuid())
    street      String  @db.VarChar(100)
    village     String  @db.VarChar(100)
    district    String  @db.VarChar(100)
    city        String  @db.VarChar(100)
    province    String  @db.VarChar(100)
    country     String? @db.VarChar(100)
    postal_code String? @db.VarChar(10)
    description String? @db.VarChar(150)
    user_id     String?
    user        User?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@map("addresses")
}

model Store {
    id                String            @id @default(cuid())
    name              String            @db.VarChar(100)
    owner             User?             @relation()
    products          Product[]
    productCategories ProductCategory[]

    @@map("stores")
}

model ProductCategory {
    id       String    @id @default(cuid())
    name     String    @db.VarChar(100)
    store_id String
    products Product[]
    store    Store     @relation(fields: [store_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@unique([name, store_id])
    @@index([store_id])
    @@map("product_categories")
}

model Product {
    id          String          @id @default(cuid())
    name        String          @db.VarChar(100)
    price       Decimal         @db.Decimal(10, 2)
    description String?         @db.Text
    stock       Int             @default(0)
    category_id String
    store_id    String
    store       Store           @relation(fields: [store_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    category    ProductCategory @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)

    @@index([store_id])
    @@index([category_id])
    @@map("products")
}
